from io import BytesIO
from datetime import datetime
from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph, Spacer
from reportlab.lib.pagesizes import landscape, A4
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet


def generate_pdf_report(records, start_date, end_date):
    buffer = BytesIO()
    date_range = f"{start_date.strftime('%d-%b-%Y')} to {end_date.strftime('%d-%b-%Y')}"

    # Setup PDF
    doc = SimpleDocTemplate(buffer, pagesize=landscape(A4), leftMargin=20, rightMargin=20, topMargin=30, bottomMargin=30)
    elements = []
    styles = getSampleStyleSheet()
    style_title = styles["Title"]
    style_footer = styles["Normal"]
    style_footer.alignment = 1

    # Title & Date Range
    elements.append(Paragraph("ANSAR HOSPITAL", style_title))
    elements.append(Paragraph(f"Attendance Report: {date_range}", styles["Heading3"]))
    elements.append(Spacer(1, 12))

    # Table Header
    table_data = [['S.No', 'ID', 'Name', 'Check-In', 'Check-Out', 'Status', 'Submitted By']]

    # Add Records
    for idx, row in enumerate(records, start=1):
        table_data.append([
            str(idx),
            row.get('id', ''),
            row.get('name', ''),
            row.get('checkin', ''),
            row.get('checkout', ''),
            row.get('status', ''),
            row.get('submitted_by', '')
        ])

    # Build Table
    table = Table(table_data, repeatRows=1)
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.darkblue),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
        ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
        ('GRID', (0, 0), (-1, -1), 0.3, colors.black),
        ('FONTSIZE', (0, 0), (-1, -1), 9),
        ('BOTTOMPADDING', (0, 0), (-1, 0), 8),
    ]))

    elements.append(table)
    elements.append(Spacer(1, 20))

    # Footer
    footer = Paragraph("Generated by Ansar Hospital", style_footer)
    elements.append(footer)

    doc.build(elements)
    buffer.seek(0)

    filename = f"Attendance_{start_date.strftime('%d%b')}_to_{end_date.strftime('%d%b')}.pdf"
    mimetype = "application/pdf"
    return buffer.read(), filename, mimetype
